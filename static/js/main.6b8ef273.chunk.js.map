{"version":3,"sources":["serviceWorker.js","actions.js","constants.js","api/api.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Header.js","components/mainpage.js","container/App.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","requestRobots","dispatch","type","link","axios","url","method","res","payload","data","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","hasError","info","this","setState","Component","Header","nextProps","nextState","MainPage","filterRobots","filter","robot","toLowerCase","includes","searchField","onRequestRobots","onSearchChange","isPending","App","connect","searchRobots","event","target","value","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6b8ef273.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { apiCall } from './api/api'\r\nimport {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED\r\n } from './constants'\r\n\r\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING })\r\n  return apiCall('https://jsonplaceholder.typicode.com/users')\r\n    .then(res => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: res.data }))\r\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\r\n}","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import axios from 'axios';\nexport const apiCall = (link) => \n  axios({\n    url: link,\n    method: 'get'\n  })","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib pa3 ma2 br3 bw2 shadow-5 grow'>\r\n\t\t\t<img alt ='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn (<Card\r\n\t\t\t\t\t\tkey={robots[i].id}\r\n\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\temail={robots[i].email}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa3'>\r\n\t\t\t<input\r\n\t\t\taria-label='search robots'\r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search'\r\n\t\t\tplaceholder='search robot'\r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '2px solid black', height: '700px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor (props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\trender () {\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn <h1>Ooops, Something Went Wrong </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\n\nclass Header extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false\n  }\n  render() {\n    return (\n      <div>\n        <h1 className='f1'>RoboFriends</h1>\n      </div>\n    );\n  }\n};\n\nexport default Header;","import React, { Component } from 'react';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Header from '../components/Header';\n\nimport './mainpage.css';\n\n\nclass MainPage extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  filterRobots = () => {\n    return this.props.robots.filter(robot => {\n        return robot.name.toLowerCase().includes(this.props.searchField.toLowerCase());\n    })\n  }\n  render() {\n    const { onSearchChange, isPending } = this.props;\n \n    return (\n      <div className='tc'>\n        <Header />\n        <SearchBox searchChange={onSearchChange}/>\n        <Scroll>\n          { isPending ? <h1 id='pending'>Loading</h1> :\n            <ErrorBoundry>\n              <CardList robots={this.filterRobots()} />\n            </ErrorBoundry>\n          }\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default MainPage;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nimport './App.css';\r\nimport MainPage from '../components/mainpage';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <MainPage {...this.props}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import {\r\n\tCHANGE_SEARCHFIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAILED\r\n   } from './constants';\r\n  \r\n  const initialStateSearch = {\r\n\tsearchField: ''\r\n  }\r\n  \r\n  export const searchRobots = (state=initialStateSearch, action={}) => {\r\n\tswitch (action.type) {\r\n\t  case CHANGE_SEARCHFIELD:\r\n\t\treturn Object.assign({}, state, {searchField: action.payload})\r\n\t  default:\r\n\t\treturn state\r\n\t}\r\n  }\r\n  \r\n  const initialStateRobots = {\r\n\trobots: [],\r\n\tisPending: false\r\n  }\r\n  \r\n  export const requestRobots = (state=initialStateRobots, action={}) => {\r\n\tswitch (action.type) {\r\n\t  case REQUEST_ROBOTS_PENDING:\r\n\t\treturn Object.assign({}, state, {isPending: true})\r\n\t  case REQUEST_ROBOTS_SUCCESS:\r\n\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false})\r\n\t  case REQUEST_ROBOTS_FAILED:\r\n\t\treturn Object.assign({}, state, {error: action.payload})\r\n\t  default:\r\n\t\treturn state\r\n\t}\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger } from 'redux-logger';\nimport App from './container/App';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger()\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render( \n\t\t\t\t<Provider store={store} >\n\t\t\t\t\t<App/>\n\t\t\t\t</Provider>\n\t\t\t\t, document.getElementById('root'));\n\n\nserviceWorker.register();\n"],"sourceRoot":""}